<?php



/**
 * Skeleton subclass for representing a row from the 'sfOauthServerConsumer' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.4 on:
 *
 * Tue Apr 24 12:45:23 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class Sfoauthserverconsumer extends BaseSfoauthserverconsumer {
//Surcharges pour générer la clé publique et privée
	public function save(PropelPDO $conn = null)
	{
		if ($this->getConsumerKey()=="")
			$this->setConsumerKey(sfOAuthServer::generateConsumerKey($this->getName()));
		if ($this->getConsumerSecret()=="")
			$this->setConsumerSecret(sfOAuthServer::generateConsumerSecret($this->getName()));

		$ret = parent::save($conn);
		return $ret;
	}

	/**
	 * Check if the user is one of developers
	 * @param integer $userId
	 * @return boolean
	 */
	public function hasDeveloper($userId)
	{
	  foreach ($this->getDevelopers() as $developer)
	    if ($developer->getId()==$userId)
	      return true;
	  return false;
	}
	/**
	 * Add a developer
	 * @param integer $userId
	 * @param boolean $admin
	 */
	public function addDeveloper($userId,$admin = false)
	{
	  if (!$this->hasDeveloper($userId))
	    {
	      $dev = new sfOauthServerDeveloper();
	      $dev->setConsumerId($this->getId());
	      $dev->setUserId($userId);
	      $dev->getAdmin($admin);
	      $dev->save();
	    }
	}
	/**
	 * Del a developer
	 * @param integer $userId
	 */
	public function delDeveloper($userId)
	{
	  if ($this->hasDeveloper($userId))
	    {
	      $developer = sfOauthServerDeveloperQuery::create()->where('consumer_id = ? AND user_id = ?',array($this->getId(),$userId))->fetchOne();
	      if ($developer)
		$developer->delete();
	    }
	}

	public function getNumberUsers()
	{
	  return sfOauthServerUserScopeQuery::create()->findByConsumerId($this->getId())->count();
	}

	public function increaseNumberQuery()
	{
	  $this->setNumberQuery($this->getNumberQuery()+1);
	  $this->save();
	}
} // Sfoauthserverconsumer
