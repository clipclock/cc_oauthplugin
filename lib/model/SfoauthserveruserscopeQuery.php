<?php



/**
 * Skeleton subclass for performing query and update operations on the 'sfOauthServerUserScope' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.4 on:
 *
 * Tue Apr 24 12:48:25 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class SfoauthserveruserscopeQuery extends BaseSfoauthserveruserscopeQuery {
/**
   * To save when an user accept an application
   * @param integer $consumerId
   * @param integer $userId
   * @param string $scope
   */
  public function authorizeApplication($consumerId,$userId,$scope)
  {
    $userScope = $this->where('Sfoauthserveruserscope.ConsumerId = ?' ,$consumerId)
      ->where('Sfoauthserveruserscope.UserId = ?',$userId)
      ->findOne();
    if (!$userScope){
      $userScope = new sfOauthServerUserScope();
      $userScope->setConsumerId($consumerId);
      $userScope->setUserId($userId);
    }
    $userScope->setScope($scope);
    $userScope->save();

  }
  /**
   * Check if an application has already been accepted by an user
   * @param integer $consumerId
   * @param integer $userId
   * @param string $scope
   * @return boolean
   */
  public function isApplicationAuthorized($consumerId,$userId,$scope)
  {

	 if (!$scope) // If an application has no permission, it is automatically authorized
		return true;

    $userScope = $this->where('Sfoauthserveruserscope.ConsumerId = ?' ,$consumerId)
      ->where('Sfoauthserveruserscope.UserId = ?',$userId)
      ->findOne();
    if(!$userScope)
      return false;
    $permissions = explode($userScope->getScope(),' ');
    $scope = explode($scope,' ');

    if(array_diff($permissions,$scope)==Array() )
      return true;
    else
      return false;

  }

  public function getApplicationsOf($userId)
  {
    $q = $this->where('Sfoauthserveruserscope.UserId = ?',$userId)->leftJoin('Consumer')->execute();
    return $q;
  }
} // SfoauthserveruserscopeQuery
